# Install required plugins
required_plugins = ["vagrant-hostsupdater"]
required_plugins.each do |plugin|
    exec "vagrant plugin install #{plugin}" unless Vagrant.has_plugin? plugin
end

Vagrant.configure("2") do |config|


  config.vm.define "app" do |app|
    app.vm.box = "ubuntu/bionic64"
    app.vm.network "private_network", ip: "192.168.10.100"
    app.hostsupdater.aliases = ["development.local"]
    app.vm.synced_folder "app", "/home/ubuntu/app"
    app.vm.synced_folder "environment", "/home/vagrant/enviroment"
    app.vm.provision :ansible_local do |ansible|
      ansible.playbook       = "/home/vagrant/enviroment/theplaybook.yml"
      ansible.verbose        = true
      ansible.install        = true
    #  ansible.inventory_path = "/home/vagrant/enviroment/inventory.yml"
    end
    app.vm.provider "virtualbox" do |v|
      v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
      v.customize ["modifyvm", :id, "--natdnsproxy1", "on"]
    end
  end

  config.vm.define "db" do |db|
    db.vm.box = "ubuntu/bionic64"
    db.vm.network "private_network", ip: "192.168.10.150"
    db.hostsupdater.aliases = ["database.local"]
    db.vm.synced_folder "environment", "/home/ubuntu/enviroment"
    db.vm.provision :ansible_local do |ansible|
      ansible.playbook       = "/home/ubuntu/enviroment/theplaybook.yml"
      ansible.verbose        = true
      ansible.install        = true
    #  ansible.inventory_path = "/home/vagrant/enviroment/inventory.yml"
    end
    db.vm.provider "virtualbox" do |v|
      v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
      v.customize ["modifyvm", :id, "--natdnsproxy1", "on"]
    end
  end

end
